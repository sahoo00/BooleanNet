/* Generated By:JavaCC: Do not edit this line. OBOConstants.java */
package tools.goanalysis.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OBOConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALPHA_CHAR = 1;
  /** RegularExpression Id. */
  int NUM_CHAR = 2;
  /** RegularExpression Id. */
  int ALPHANUM_CHAR = 3;
  /** RegularExpression Id. */
  int ID_CHAR = 4;
  /** RegularExpression Id. */
  int ID = 5;
  /** RegularExpression Id. */
  int WHITESPACE = 6;
  /** RegularExpression Id. */
  int NEWLINE = 7;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int SPACE = 11;
  /** RegularExpression Id. */
  int EOL = 12;
  /** RegularExpression Id. */
  int FORMATVERSION = 13;
  /** RegularExpression Id. */
  int TYPEREF = 14;
  /** RegularExpression Id. */
  int DEF = 15;
  /** RegularExpression Id. */
  int IDENTIFIER = 16;
  /** RegularExpression Id. */
  int COLON = 17;
  /** RegularExpression Id. */
  int ESC_CHR = 18;
  /** RegularExpression Id. */
  int STRING_START = 19;
  /** RegularExpression Id. */
  int LCOLON = 20;
  /** RegularExpression Id. */
  int LINE_END = 21;
  /** RegularExpression Id. */
  int LINE_WORD = 22;
  /** RegularExpression Id. */
  int STRING_END = 23;
  /** RegularExpression Id. */
  int STRING_WORD = 24;

  /** Lexical state. */
  int LexString = 0;
  /** Lexical state. */
  int LexLine = 1;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 2;
  /** Lexical state. */
  int DEFAULT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ALPHA_CHAR>",
    "<NUM_CHAR>",
    "<ALPHANUM_CHAR>",
    "<ID_CHAR>",
    "<ID>",
    "<WHITESPACE>",
    "<NEWLINE>",
    "\"!\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 10>",
    "<SPACE>",
    "<EOL>",
    "\"format-version\"",
    "\"typeref\"",
    "<DEF>",
    "<IDENTIFIER>",
    "\":\"",
    "<ESC_CHR>",
    "\"\\\"\"",
    "\":\"",
    "<LINE_END>",
    "<LINE_WORD>",
    "\"\\\"\"",
    "<STRING_WORD>",
    "\"[\"",
  };

}
